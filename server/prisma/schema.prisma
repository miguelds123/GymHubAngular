// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//Modelos 

model Usuario {
  id              Int       @id @default(autoincrement())
  nombre          String
  telefono        String
  email           String    @unique
  direccion       String
  fechaNacimiento DateTime
  password        String
  role            Role      @default(CLIENTE)
  citas           Cita[]
  facturas        Factura[]
  proformas       Proforma[]
  Sucursal        Sucursal? @relation(fields: [sucursalId], references: [id])
  sucursalId      Int?
}

enum Role {
  CLIENTE
  ENCARGADO
  ADMINISTRADOR
}

model Sucursal {
  id             Int              @id @default(autoincrement())
  nombre         String
  descripcion    String
  telefono       String
  direccion      String
  email          String
  citas          Cita[]
  Usuario        Usuario[]
  Factura        Factura[]
  HorarioBloqueo HorarioBloqueo[]
  Horario        Horario[]
  proformas      Proforma[]
}

model Servicio {
  id                    Int                       @id @default(autoincrement())
  nombre                String
  descripcion           String
  tarifa                Decimal                   @db.Decimal(10, 2)
  tiempo                Int // Tiempo en minutos
  nivelDificultad       String // Campo adicional relacionado con el tipo de negocio
  equipamientoNecesario String // Campo adicional relacionado con el tipo de negocio
  imagen                String
  citas                 Cita[]
  DetalleFactura        DetalleFacturaServicios[]
  proformas             Proforma[]
}

model Producto {
  id          Int                       @id @default(autoincrement())
  nombre      String
  descripcion String
  categoria   String
  precio      Decimal                   @db.Decimal(10, 2)
  peso        Decimal                   @db.Decimal(10, 2) // Campo adicional relacionado con el tipo de negocio
  marca       String // Campo adicional relacionado con el tipo de negocio
  imagen      String
  facturas    DetalleFacturaProductos[]
}

model Horario {
  id         Int       @id @default(autoincrement())
  sucursalId Int
  sucursal   Sucursal  @relation(fields: [sucursalId], references: [id])
  diaSemana  DiaSemana
  fecha      DateTime
  horaInicio DateTime
  horaFin    DateTime
}

model HorarioBloqueo {
  id         Int       @id @default(autoincrement())
  sucursalId Int
  sucursal   Sucursal  @relation(fields: [sucursalId], references: [id])
  diaSemana  DiaSemana
  fecha      DateTime
  horaInicio DateTime
  horaFin    DateTime
}

enum DiaSemana {
  Lunes
  Martes
  Miercoles
  Jueves
  Viernes
  Sabado
  Domingo
}

model Cita {
  id                    Int        @id @default(autoincrement())
  fecha                 DateTime
  horaInicio            DateTime
  horaFin               DateTime
  estado                EstadoCita @default(PENDIENTE)
  sucursalId            Int
  sucursal              Sucursal   @relation(fields: [sucursalId], references: [id])
  usuarioId             Int
  usuario               Usuario    @relation(fields: [usuarioId], references: [id])
  servicioId            Int
  servicio              Servicio   @relation(fields: [servicioId], references: [id])
  proformas             Proforma[]
  encargadoId           Int // ID del encargado, sin relación directa
  objetivoEntrenamiento String // Pregunta específica del negocio
  nivelExperiencia      String // Pregunta específica del negocio
  condicionesMedicas    String // Pregunta específica del negocio
  updatedAt             DateTime   @default(now()) @updatedAt
}

enum EstadoCita {
  PENDIENTE
  CONFIRMADA
  REPROGRAMADA
  COMPLETADA
  CANCELADA
  NO_ASISTIO
}

model Factura {
  id         Int                       @id @default(autoincrement())
  fecha      DateTime
  clienteId  Int
  cliente    Usuario                   @relation(fields: [clienteId], references: [id])
  sucursalId Int
  sucursal   Sucursal                  @relation(fields: [sucursalId], references: [id])
  total      Decimal                   @db.Decimal(10, 2)
  estado     Boolean
  productos  DetalleFacturaProductos[]
  servicios  DetalleFacturaServicios[]
}

model DetalleFacturaProductos {
  facturaId  Int
  factura    Factura  @relation(fields: [facturaId], references: [id])
  idDetalle  Int      
  productoId Int
  producto   Producto @relation(fields: [productoId], references: [id])
  cantidad   Int
  subtotal   Decimal  @db.Decimal(10, 2)

  @@id([facturaId, idDetalle])
}

model DetalleFacturaServicios {
  facturaId  Int
  factura    Factura  @relation(fields: [facturaId], references: [id])
  idDetalle  Int
  servicioId Int
  servicio   Servicio @relation(fields: [servicioId], references: [id])
  cantidad   Int
  subtotal   Decimal  @db.Decimal(10, 2)

  @@id([facturaId, idDetalle])
}

model Proforma {
  id            Int      @id @default(autoincrement())
  citaId        Int      @unique
  clienteId     Int
  sucursalId    Int
  servicioId    Int
  cantidad      Int      @default(1)
  subtotal      Float
  total         Float
  fechaRerserva DateTime
  createdAt     DateTime @default(now())
  estado        Boolean  @default(false)  // Nuevo campo agregado

  // Relaciones
  cita          Cita     @relation(fields: [citaId], references: [id])
  cliente       Usuario  @relation(fields: [clienteId], references: [id])
  sucursal      Sucursal @relation(fields: [sucursalId], references: [id])
  servicio      Servicio @relation(fields: [servicioId], references: [id])
}